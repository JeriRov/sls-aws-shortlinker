createShortUrl:
  handler: handler.createShortUrl
  events:
    - httpApi:
        path: /short-url
        method: post
        authorizer:
          name: jwtAuthorizer
        description: 'This endpoint allows you to create a short link.'
        swaggerTags: [ Short-url ]
        bodyType: CreateUrlRequestBody
        responseData:
          200:
            description: 'Returns the id.'
            bodyType: CreateUrlResponseBody
          409:
            description: 'Validation error'
            bodyType: ErrorResponse
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
      Resource: !GetAtt UrlTable.Arn

redirectShortUrl:
  handler: handler.redirectShortUrl
  events:
    - httpApi:
        path: /{shortId}
        method: get
        description: 'This endpoint allows you to redirect to the original url.'
        swaggerTags: [ Short-url ]
        responseData:
          301: 'Redirect to original url'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:UpdateItem'
      Resource: !GetAtt UrlTable.Arn

deactivateShortUrl:
  handler: handler.deactivateShortUrl
  events:
    - httpApi:
        path: /deactivate/{shortId}
        method: put
        authorizer:
          name: jwtAuthorizer
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:UpdateItem'
      Resource: !GetAtt UrlTable.Arn

myShortUrls:
  handler: handler.myShortUrls
  events:
    - httpApi:
        path: /my-short-urls
        method: get
        authorizer:
          name: jwtAuthorizer
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:Query'
      Resource: !GetAtt UrlTable.Arn
